---
- name: Create a SSH key for "{{ ansible_user }}" 
  ansible.builtin.user:
    name: "{{ ansible_user }}" 
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa

- name: Download and extract nvim
  ansible.builtin.unarchive:
    src: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
    dest: /opt
    remote_src: yes
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Install user apps
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - gimp
    - scrot
    - feh
    - alsa-utils

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /root/code 
    state: directory
    mode: '0700'
    owner: root 
    group: root 

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /opt/AppImage/ 
    state: directory
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Download Obsidian
  ansible.builtin.get_url:
    url: https://github.com/obsidianmd/obsidian-releases/releases/download/v1.6.7/Obsidian-1.6.7.AppImage
    dest: /opt/AppImage/
    mode: '0555'

- name: Add nvim to $PATH
  ansible.builtin.copy:
    dest: /etc/profile.d/00-nvim.sh
    content: 'PATH=$PATH:/opt/nvim-linux64/bin:/opt/AppImage'

- name: set nvim config in /home/{{ ansible_user }}/.config/
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/templates/nvim"
    dest: "/home/{{ ansible_user }}/.config/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"


- name: Setup custom path and alias files
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/templates/{{ item }}"
    dest: "/home/{{ ansible_user }}/.config/"
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - custom_path.sh
    - custom_alias.sh

- name: Ensure custom alias is added
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/{{ item.file }}" 
    line: "{{ item.line }}"
    state: present
    create: yes
  loop:
    - {file: ".profile", line: "source ~/.config/custom_alias.sh"}
    - {file: ".bashrc", line: "source ~/.config/custom_alias.sh"}
    - {file: ".profile", line: "source ~/.config/custom_path.sh"}
    - {file: ".bashrc", line: "source ~/.config/custom_path.sh"}
    - {file: ".profile", line: "feh --bg-scale https://w.wallhaven.cc/full/dp/wallhaven-dp3plm.jpg"}

- name: Clearing dmenu cache
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.cache/dmenu_run"
    state: absent

- name: Setup custom services 
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/templates/{{ item.file }}"
    dest: "{{ item.dest }}"
    mode: '0700'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - {file: "dwm_status.service", dest: "/home/{{ ansible_user }}/.config/systemd/user/"}
    - {file: "status.sh", dest: "/home/{{ ansible_user }}/code/dwm_status/"}
    - {file: "daily_btrfs_snapshot.sh", dest: "/root/code/"}
    - {file: "btrfs_snapshot.service", dest: "/etc/systemd/system/"}
    - {file: "btrfs_snapshot.timer", dest: "/etc/systemd/system/"}
    - {file: "btrfs_snapshot@.service", dest: "/etc/systemd/system/"}
    - {file: "6_hour_snapshot.timer", dest: "/etc/systemd/system/"}

- name: Enable btrfs snapshots
  shell: "systemctl enable --now {{ item }}"
  loop:
    - btrfs_snapshot.timer
    - 6_hour_snapshot.timer 

- name: Enable status service 
  shell: "{{ item }}"
  become: no
  loop:
    - "systemctl --user enable dwm_status.service"
    - "systemctl --user daemon-reload"
    - "systemctl --user start dwm_status.service"

